{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "defaultValue": "aksadcluster",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure location of the AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "defaultValue": "aksadcluster",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "defaultValue": 500,
            "minValue": 0,
            "maxValue": 1023,
            "type": "int",
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "agentCount": {
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 50,
            "type": "int",
            "metadata": {
                "description": "The number of agent nodes for the cluster. Production workloads have a recommended minimum of 3."
            }
        },
        "agentVMSize": {
            "defaultValue": "Standard_D2_v2",
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "aksServicePrincipalObjectId": {
            "type": "string",
            "metadata": {
                "description": "Oject ID against which the Network Contributor roles will be assigned on the subnet"
            }
        },
        "aksServicePrincipalClientId": {
            "type": "string",
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            }
        },
        "aksServicePrincipalClientSecret": {
            "type": "string",
            "metadata": {
                "description": "The Service Principal Client Secret."
            }
        },
        "osType": {
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.12.8",
            "type": "string",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "enableHttpApplicationRouting": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing"
            }
        },
        "networkPlugin": {
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "defaultValue": "azure",
            "type": "string",
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "defaultValue": 30,
            "type": "int",
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.240.0.0/16",
            "metadata": {
              "description": "Address prefix"
            }
        },
        "vnetAksSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.240.0.0/17",
            "metadata": {
              "description": "Address prefix"
            }
        },
        "vnetAppGatewaySubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.240.128.0/24",
            "metadata": {
              "description": "Address prefix"
            }
        },
        "serviceCidr": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "AAD_ClientAppID":{
            "type":"string",
            "metadata": {
                "description": "The Application ID for the Client App Service Principal"
            }
        },
        "AAD_ServerAppID":{
            "type":"string",
            "metadata": {
                "description": "The Application ID for the Server App Service Principal"
            }
        },
        "AAD_TenantID":{
            "type":"string",
            "metadata": {
                "description": "The Azure AD Tenant where the cluster will reside"
            }
        },
        "AAD_ServerAppSecret":{
            "type":"securestring",
            "metadata": {
                "description": "The Service Principal Secret for the Client App Service Principal"
            }
        },
        "applicationGatewaySku": {
            "defaultValue": "WAF_v2",
            "allowedValues": [
                "Standard_v2",
                "WAF_v2"
            ],
            "type": "string",
            "metadata": {
                "description": "The sku of the Application Gateway. Default: WAF_v2 (Detection mode). In order to further customize WAF, use azure portal or cli."
            }
        }
    }, 
    "variables": {
        "vnetName": "[concat('vnet-', parameters('resourceName'))]",
        "applicationGatewayName": "[concat('appgw-', parameters('resourceName'))]",
        "applicationGatewayPublicIpName": "[concat('appgw-ip-', parameters('resourceName'))]",
        "vnetAksSubnetName": "aks-nodes",
        "vnetAppGatewaySubnetName": "ingress",
        "webApplicationFirewallConfiguration": {
            "enabled": "true",
            "firewallMode": "Detection"
        },
        "networkContributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
        "appGwContributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"

    },
    "resources": [
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnetAksSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetAksSubnetAddressPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('vnetAppGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetAppGatewaySubnetAddressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('applicationGatewayPublicIpName')]",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "name": "[variables('applicationGatewayName')]",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "tags": {
                "managed-by-k8s-ingress": "true"
            },
            "properties": {
                "sku": {
                    "name": "[parameters('applicationGatewaySku')]",
                    "tier": "[parameters('applicationGatewaySku')]",
                    "capacity": 2
                },
                "frontendIPConfigurations": [{
                    "name": "appGatewayFrontendIP",
                    "properties": {
                        "PublicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('applicationGatewayPublicIpName'))]"
                        }
                    }
                }],
                "frontendPorts": [{
                    "name": "httpPort",
                    "properties": {
                        "Port": 80
                    }
                },
                {
                    "name": "httpsPort",
                    "properties": {
                        "Port": 443
                    }
                }],
                "backendAddressPools": [{
                    "name": "bepool",
                    "properties": {
                        "backendAddresses": []
                    }
                }],
                "backendHttpSettingsCollection": [{
                    "name": "setting",
                    "properties": {
                        "port": 80,
                        "protocol": "Http"
                    }
                }],
                "httpListeners": [{
                    "name": "httpListener",
                    "properties": {
                        "protocol": "Http",
                        "frontendPort": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('applicationGatewayName'), 'httpPort')]"
                        },
                        "frontendIPConfiguration": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('applicationGatewayName'), 'appGatewayFrontendIP')]"
                        }
                    }
                }],
                "requestRoutingRules": [{
                    "name": "rule1",
                    "properties": {
                        "httpListener": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('applicationGatewayName'), 'httpListener')]"
                        },
                        "backendAddressPool": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('applicationGatewayName'), 'bepool')]"
                        },
                        "backendHttpSettings": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('applicationGatewayName'), 'setting')]"
                        }
                    }
                }],
                "gatewayIPConfigurations": [{
                    "name": "appGatewayIpConfig",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'), variables('vnetAppGatewaySubnetName'))]"
                        }
                    }
                }],
                
                "webApplicationFirewallConfiguration": "[if(equals(parameters('applicationGatewaySku'), 'WAF_v2'), variables('webApplicationFirewallConfiguration'), json('null'))]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('applicationGatewayPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "[parameters('resourceName')]",
            "apiVersion": "2018-03-31",
            "location": "[parameters('location')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "aadProfile": {
                    "clientAppID": "[parameters('AAD_ClientAppID')]",
                    "serverAppID": "[parameters('AAD_ServerAppID')]",
                    "tenantID": "[parameters('AAD_TenantID')]",
                    "serverAppSecret": "[parameters('AAD_ServerAppSecret')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetAksSubnetName'))]",
                        "maxPods": "[parameters('maxPods')]"
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "[parameters('aksServicePrincipalClientId')]",
                    "secret": "[parameters('aksServicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Resources/deployments/', 'ClusterSubnetRoleAssignmentDeployment')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterSubnetRoleAssignmentDeployment",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(variables('vnetName'), '/', variables('vnetAksSubnetName'),'/Microsoft.Authorization/', guid(resourceGroup().id, 'aksvnetaccess'))]",
                            "properties": {
                                "roleDefinitionId": "[variables('networkContributorRole')]",
                                "principalId": "[parameters('aksServicePrincipalObjectId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/applicationgateways/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(variables('applicationGatewayName'), '/Microsoft.Authorization/', guid(resourceGroup().id, 'identityappgwaccess'))]",
                            "properties": {
                                "roleDefinitionId": "[variables('appGwContributorRole')]",
                                "principalId": "[parameters('aksServicePrincipalObjectId')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/applicationgateways/', variables('applicationGatewayName'))]"
            ]
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}
